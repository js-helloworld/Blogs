import{_ as s,c as r,j as e,o as n}from"./chunks/framework.CjNeJe2C.js";const u=JSON.parse('{"title":"script标签中defer和async的区别","description":"","frontmatter":{"title":"script标签中defer和async的区别","date":"2020-04-21T00:00:00.000Z","tags":["defer","async"],"categories":["html"]},"headers":[],"relativePath":"views/web随笔/html/script标签中的defer和async.md","filePath":"views/web随笔/html/script标签中的defer和async.md"}'),a={name:"views/web随笔/html/script标签中的defer和async.md"};function l(c,t,i,p,d,o){return n(),r("div",null,t[0]||(t[0]=[e("p",null,"默认情况下，脚本的下载和执行将会按照文档的先后顺序同步进行。当脚本下载和执行的时候，文档解析就会被阻塞，在脚本下载和执行完成之后文档才能往下继续进行解析。",-1),e("p",null,"下面是async和defer两者区别：",-1),e("ul",null,[e("li",null,[e("p",null,"当script中有defer属性时，脚本的加载过程和文档加载是异步发生的，等到文档解析完(DOMContentLoaded事件发生)脚本才开始执行。")]),e("li",null,[e("p",null,"当script有async属性时，脚本的加载过程和文档加载也是异步发生的。但脚本下载完成后会停止HTML解析，执行脚本，脚本解析完继续HTML解析。")]),e("li",null,[e("p",null,"当script同时有async和defer属性时，执行效果和async一致。")])],-1)]))}const _=s(a,[["render",l]]);export{u as __pageData,_ as default};
